From 5aa16c5c878bab30b125c3fd98246750684e9df3 Mon Sep 17 00:00:00 2001
From: Dongming Han <handongming@gl-inet.com>
Date: Thu, 13 Jul 2023 19:15:06 +0800
Subject: [PATCH] trigger REKEY_TIMEOUT hotplug after 3 consecutive failure of
 handshake initiation

detect disconnect time change from 0 ~ 2min to 15s ~ 2min15s
Optimize the stability in packet loss environment

Signed-off-by: Dongming Han <handongming@gl-inet.com>
---
 drivers/net/wireguard/receive.c | 2 ++
 drivers/net/wireguard/timers.c  | 9 +++++++--
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/net/wireguard/receive.c b/drivers/net/wireguard/receive.c
index 214889e..dfbf52d 100644
--- a/drivers/net/wireguard/receive.c
+++ b/drivers/net/wireguard/receive.c
@@ -97,6 +97,7 @@ static int prepare_skb_header(struct sk_buff *skb, struct wg_device *wg)
 	return 0;
 }
 
+extern int is_retry_count_wg;
 static void wg_receive_handshake_packet(struct wg_device *wg,
 					struct sk_buff *skb)
 {
@@ -193,6 +194,7 @@ static void wg_receive_handshake_packet(struct wg_device *wg,
 			 */
 			wg_packet_send_keepalive(peer);
 		}
+		is_retry_count_wg = 0;
 		break;
 	}
 	}
diff --git a/drivers/net/wireguard/timers.c b/drivers/net/wireguard/timers.c
index 7f0716c..04c8029 100644
--- a/drivers/net/wireguard/timers.c
+++ b/drivers/net/wireguard/timers.c
@@ -39,6 +39,7 @@ static inline void mod_peer_timer(struct wg_peer *peer,
 	rcu_read_unlock_bh();
 }
 
+int is_retry_count_wg = 0;
 static void wg_expired_retransmit_handshake(struct timer_list *timer)
 {
 	struct wg_peer *peer = from_timer(peer, timer,
@@ -76,8 +77,12 @@ static void wg_expired_retransmit_handshake(struct timer_list *timer)
 		wg_socket_clear_peer_endpoint_src(peer);
 
 		wg_packet_send_queued_handshake_initiation(peer, true);
-
-		wireguard_hotplug(peer->device->dev->name, REKEY_TIMEOUT_EVENT);
+		is_retry_count_wg++;
+		if(is_retry_count_wg > 3)
+		{
+			is_retry_count_wg = 0;
+			wireguard_hotplug(peer->device->dev->name, REKEY_TIMEOUT_EVENT);
+		}
 	}
 }
 
-- 
2.25.1

